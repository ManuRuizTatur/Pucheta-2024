clc;clear all;

Ts = 0.012; 
KMAX = 10000;
T = Ts*KMAX;

%Variables
m = 0.1;
Fricc = 0.1; 
long = 1.6; 
g = 9.8;
M = 1.5;

%Condiciones iniciales
alfa(1) = pi; 
color = 'blue';

%Version linealizada en el equilibrio estable.
Mat_Ac = [0      1                      0           0;
          0 -Fricc/(M+m)         -m*g/(M+m)         0;
          0      0                     0            1;
          0 -Fricc/(long*(M+m)) -g*(m+M)/(long*M)   0];
      
Mat_Bc = [      0;
            1/(M+m);
                0 ;
          1/(long*(M+m))];

Mat_C = [1 0 0 0;
         0 0 1 0];

Mat_D = [0];

sys_c = ss(Mat_Ac, Mat_Bc, Mat_C,Mat_D);
sys_d = c2d(sys_c,Ts,'zoh');

Mat_A = sys_d.a;
Mat_B = sys_d.b;

Mat_M = [Mat_B Mat_A*Mat_B Mat_A^2*Mat_B Mat_A^3*Mat_B];

Cref = Mat_C(1,:);

Mat_Aa = [Mat_A,zeros(4,1);-Cref*Mat_A,1];
Mat_Ba = [Mat_B;Cref*Mat_B];

%Controlador LQR
d = [2 2 0.01 0.01 0.00001];
Q = diag(d);                %Desplazamiento

                            %Desplazamientop
                            % phi
                            % phip
                            %integrador
R = 100;
Ka = dlqr(Mat_Aa,Mat_Ba,Q,R);

K = Ka(1:4);
KI = -Ka(5);

%OBSERVADOR
Mat_Ao = Mat_A';
Mat_Bo = Mat_C';
Mat_Co = Mat_B;

% DLQR del observador
do = [100 2000 0.001 0.001];
Qo = diag(do);              %Desplazamiento
                            %Desplazamientop
                            % phi
                            % phip
                            %integrador
Ro = diag([10000 10000]);
Ko = transpose(dlqr(Mat_Ao,Mat_Bo,Qo,Ro));
eig(Mat_A-Ko*Mat_C);

%-----------------------------------
t = 0;

%Ganancia de prealimentacion
Gj = inv(Cref*inv(eye(4)-Mat_A+Mat_B*K)*Mat_B);

x = [0; 0; alfa(1); 0];
p = x(1); 
p_p = x(2);
alfa = x(3);
omega = x(4); 

tita_pp(1) = 0;
h = Ts/20;

u = []; 
i = 1;

u_k(1) = 0; 
ref = 10; 
flag = 0; 
v(1) = 0;

x = [0; 0; alfa(1);0];
x_hat = [0;0;0;0];


%----------------Simulacion------------------

for ki = 1:KMAX
    
    y_sal = Mat_C*x;
    y_sal_o = Mat_C*x_hat;
    v(ki+1) = v(ki)+ref-y_sal(1);
    
   u1(ki) = -K*x+KI*v(ki+1); color = 'k';%Sin observador
   % u1(ki) = -K*x_hat+KI*v(ki+1); %color = 'r'; %Con observador
    
    zona_muerta = 0.4;

    %--------------ZONA MUERTA-----------------

    if(abs(u1(ki))<zona_muerta)

        u1(ki) = 0;

    else

        u1(ki) = sign(u1(ki))*(abs(u1(ki))-zona_muerta);

    end

    %-------------------------------------------

    for kii = 1:Ts/h
        
        u(i) = u1(ki);
        p_pp = (1/(M+m))*(u(i)-m*long*tita_pp*cos(alfa(i))+m*long*omega(i)^2*sin(alfa(i))-Fricc*p_p(i));
        tita_pp = (1/long)*(g*sin(alfa(i))-p_pp*cos(alfa(i)));
        
        p_p(i+1) = p_p(i)+h*p_pp;
        p(i+1) = p(i)+h*p_p(i);
        omega(i+1) = omega(i)+h*tita_pp;
        alfa(i+1) = alfa(i)+h*omega(i);
        
        if(p(i) >= 9.99)
            
            if(flag == 0)
                
                ref = 0
                m = m*10;
                flag = 1;
         
            end
            
        end
        
        i = i+1;
    end
    
    x = [p(i-1); p_p(i-1); alfa(i-1); omega(i-1)];
    x_hat = Mat_A*x_hat+Mat_B*u1(ki)+Ko*(y_sal-y_sal_o);
    
end

u(i) = u1(ki);
t = 0:h:T;

figure(1);hold on; 
subplot(3,2,1);plot(t,alfa,color);grid on;title('Ángulo');hold on;
subplot(3,1,3); plot(t,p,color);grid on;title('Posición carro');hold on;
subplot(3,2,3);plot(t,u,color);grid on;title('Acción de control');xlabel('Tiempo en Seg.');hold on;
subplot(3,2,4);plot(t,omega,color);grid on; title('Velocidad ángulo');hold on;
subplot(3,2,2);plot(t,p_p,color);grid on;title('Velocidad carro');hold on;
hold on;
